#!/bin/bash -e

if [ $( /bin/pwd | grep -v gpfs ) ]; then
  echo "Error: jobs must be run from /gpfs"
  exit
fi

if [ "$interactive" ]; then
cat << END > mf
tg-c127:2
tg-c128:2
tg-c129:2
tg-c130:2
END
if ! grep -q "$HOSTNAME" mf; then
  echo "Error: interactive jobs must be launched from the following hosts:"
  sed 's/^/  /; s/:2//' mf
  exit
fi
elif [ "$mode" = p ]; then
cat << END > pbsscript0
#!/bin/bash
#PBS -q dque
#PBS -N sord-$count
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -l walltime=$walltime
#PBS -o out0.log
#PBS -e err0.log
#PBS -V
cd "$rundir"
echo "$(date): Start SCECVM run" >> run.log
cd vm
time mpirun -machinefile \$PBS_NODEFILE -np $np ./scecvm4-$mode
mv rho vp vs "$rundir/data"
cd "$rundir"
echo "$(date): Start SORD run" >> run.log
mpirun -machinefile \$PBS_NODEFILE -np $np ./sord-$mode
echo "$(date): Finish SORD run" >> run.log
END
chmod u+x pbsscript0
cat << END > pbsscript
#!/bin/bash
#PBS -q dque
#PBS -N sord-$count
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -l walltime=$walltime
#PBS -o out.log
#PBS -e err.log
#PBS -V
cd "$rundir"
echo "$(date): Start SORD run" >> run.log
mpirun -machinefile \$PBS_NODEFILE -np $np ./sord-$mode
echo "$(date): Finish SORD run" >> run.log
END
chmod u+x pbsscript
fi

case "$mode$run" in
  si) ./sord-s ;;
  sg) totalview ./sord-s ;;
  sb) nohup ./sord-s > out.log & ;;
  pi) mpirun -machinefile mf -np $np ./sord-p ;;
  pg) mpirun -tv -machinefile mf -np $np ./sord-p ;;
  pb) nohup mpirun -machinefile mf -np $np ./sord-p > out.log & ;;
  pq) pbsjob=$( qsub pbsscript ) ;;
esac

