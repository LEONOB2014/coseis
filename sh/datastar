#!/bin/bash -e

if [ $( /bin/pwd | grep -v gpfs ) ]; then
  echo "Error: jobs must be run from /gpfs"
  exit
fi

cat << END > run
#!/bin/bash -e
if [ "\$HOSTNAME" != ds100 ]; then
  echo "Error: interactive jobs must be launched from dspoe"
  exit
fi
echo "\$(date): Start SORD run" >> log
END

case "$mode" in
s) cat << END >> run
case "\${1:?}" in
  -i) ./sord-s ;;
  -g) totalview ./sord-s ;;
  -b) nohup ./sord-s > out.log & :; pid=\$!
      echo "Background job started with PID \$pid" >> log
      echo "Background job started with PID \$pid" ;;
esac
echo "\$(date): Finished!" >> log
END
;;
p) cat << END >> run
opts="-tasks_per_node $ppn -nodes $nodes -rmpool 1 -euilib us -euidevice sn_all"
case "\${1:?}" in
  -i) poe ./sord-p $opts ;;
  -g) tvpoe ./sord-p $opts ;;
  -b) nohup poe ./sord-p $opts > out.log & :; pid=\$!
      echo "Background job started with PID \$pid" >> log
      echo "Background job started with PID \$pid" ;;
esac
echo "\$(date): Finished!" >> log
END
;;
esac

cat << END > que
#!/bin/bash
llsubmit llscript >> log
END

cat << END > llscript
#!/bin/bash
#@environment = COPY_ALL;\\
#AIXTHREAD_SCOPE=S;\\
#MP_ADAPTER_USE=dedicated;\\
#MP_CPU_USE=unique;\\
#MP_CSS_INTERRUPT=no;\\
#MP_EAGER_LIMIT=32768;\\
#MP_EUIDEVELOP=min;\\
#MP_LABELIO=yes;\\
#MP_POLLING_INTERVAL=100000;\\
#MP_PULSE=0;\\
#MP_SHARED_MEMORY=yes;\\
#MP_SINGLE_THREAD=no;\\
#RT_GRQ=ON;\\
#SPINLOOPTIME=0;\\
#YIELDLOOPTIME=0;
#@ job_name = sord-$count
#@ initialdir = $rundir
#@ node = $nodes
#@ tasks_per_node = $ppn
#@ wall_clock_limit = $walltime
#@ notification = always
#@ notify_user = $email
#@ job_type = parallel
#@ class = normal
#@ node_usage = not_shared
#@ network.MPI = sn_all, shared, US
#@ output = out.\$(jobid)
#@ error = err.\$(jobid) 
#@ queue
cd "$rundir"
END

if [ "$nc" ]; then

cat << END > que-vm
#!/bin/bash
llsubmit llscript-vm >> log
END

cp llscript llscript-vm
cat << END >> llscript-vm
echo "\$(date): Start VM run" >> log
cd "$rundir/vm"
poe ./scecvm4-$mode $nc rlon rlat rdep rho vp vs
mv rho vp vs "$rundir/data"
cd "$rundir"
echo "\$(date): Start SORD run" >> log
poe ./sord-$mode
echo "\$(date): Finished!" >> log
END
chmod u+x que-vm llscript-vm

fi

cat << END >> llscript
echo "\$(date): Start SORD run" >> log
poe ./sord-$mode
echo "\$(date): Finished!" >> log
END

chmod u+x run que llscript

