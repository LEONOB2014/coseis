#!/bin/bash -e

cat << END > run
#!/bin/bash
echo "\$( date ): Start SORD run" >> log
case \${1:?} in
  -i) mpirun -machinefile mf -np $np ./sord-$mode ;;
  -g) mpirun -machinefile mf -np $np -dbg=gdb ./sord-$mode ;;
  -b) nohup mpirun -machinefile mf -np $np ./sord-$mode > out.log & :; pid=\$!
      echo "Background job started with PID: \$pid" >> log
      echo "Background job started with PID: \$pid" ;;
esac
echo "\$( date ): Finished!" >> log
END

cat << END > mf
node39:4
node40:4
node41:4
node42:4
node43:2
node44:2
node45:4
node46:2
node47:2
node48:2
node49:2
END

cat << END > que
#!/bin/bash
echo "\$( date ): Job qued with ID: \$( qsub pbsscript )" >> log
END

cat << END > pbsscript
#!/bin/bash
#PBS -N sord-$count
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -l walltime=$walltime
#PBS -q workq
#PBS -M $email
#PBS -m abe
#PBS -V
sleep 2
cd "$rundir"
echo "\$PBS_JOBID" >> log
echo "\$( date ): Start SORD run" >> log
mpiexec -n $np ./sord-$mode
echo "\$( date ): Finished!" >> log
END

chmod u+x run que pbsscript

if [ "$nc" ]; then

cat << END > que-vm
#!/bin/bash
echo "\$( date ): Job qued with ID: \$( qsub pbsscript-vm )" >> log
END

cat << END > pbsscript-vm
#!/bin/bash
#PBS -N sord-vm-$count
#PBS -l walltime=$walltime
#PBS -l nodes=$nodes:ppn=$ppn
#PBS -q workq
#PBS -M $email
#PBS -m abe
#PBS -V
sleep 2
cd "$rundir"
echo "\$PBS_JOBID" >> log
echo "\$( date ): Start VM run" >> log
cd "$rundir/vm"
mpiexec -n $np ./scecvm4-$mode $nc rlon rlat rdep rho vp vs
mv rho vp vs "$rundir/data"
cd "$rundir"
echo "\$( date ): Start SORD run" >> log
mpiexec -n $np ./sord-$mode
echo "\$( date ): Finished!" >> log
END

chmod u+x que-vm pbsscript-vm

fi

