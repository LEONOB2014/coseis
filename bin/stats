#!/usr/bin/env python
"""
Print binary file statistics. Default data type is 4 byte floating point.
"""
import os, sys, imp
import numpy as np

block = 64 * 1024 * 1024
arg_dtype = None
args = []
for a in sys.argv[1:]:
    if a[0] == '-':
        arg_dtype = a[1:].replace('l', '<').replace('b', '>')
    else:
        args += [a]

print('         Min          Max         Mean            N')
for filename in args:
    if not os.path.isfile(filename):
        continue
    if filename.endswith('npy'):
        r = np.load(filename)
        n = r.size
        rmin = r.min()
        rmax = r.max()
        rmean = r.mean()
        filename += ' ' + str(r.shape)
    else:
        if arg_dtype:
            dtype = arg_dtype
        else:
            meta = os.path.dirname(filename)
            meta = os.path.join(meta, 'meta.py')
            try:
                meta = imp.load_source('meta', meta)
                dtype = meta.dtype
            except:
                dtype = 'f'
        nb = np.dtype(dtype).itemsize
        n = os.path.getsize(filename)
        if n == 0 or n % nb != 0:
            continue
        n //= nb
        fh = open(filename, 'rb')
        rmin =  np.inf
        rmax = -np.inf
        rsum = 0.0
        i = 0
        while i < n:
            b = min(n-i, block)
            r = np.fromfile(fh, dtype=dtype, count=b)
            rmin = min(rmin, r.min())
            rmax = max(rmax, r.max())
            rsum += r.astype('d').sum()
            i += b
        rmean = rsum / n
    print('%12g %12g %12g %12d %s' % (rmin, rmax, rmean, n, filename))

