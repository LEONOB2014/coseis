#!/bin/bash -e

IFS=":$IFS"
tar=tar
for dir in $PATH; do [ -x $dir/gtar ] && tar=gtar; done
for dir in $PATH; do
for file in xlf95_r ifort pgf90 gfortran f95; do
  if [ -x $dir/$file ]; then
    sfc=$file
    break 2
  fi
done
done
IFS="${IFS:1}"

pfc='mpif90'
getarg=''
case $sfc in
xlf95_r)
  sfc='xlf95_r -q64 -qsuppress=cmpmsg -qfixed'
  pfc='mpxlf95_r -q64 -qsuppress=cmpmsg -qfixed'
  flags='-g -C -qflttrap -qsigtrap'
  flags='-O -C'
  flags='-O4'
  ;;
ifort)
  flags='-warn -CB -traceback'
  flags='-O -CB -traceback'
  flags='-O3'
  ;;
pgf90)
  getarg='getarg-pgf.f'
  sfc='pgf90'
  flags='-O -Ktrap=fp -Mbounds'
  flags='-O0' # optimization breaks it
  ;;
gfortran)
  flags='-Wall -O -g -pg'
  flags='-Wall -O -g -fbounds-check'
  flags='-Wall -O3'
  ;;
f95)
  flags='-g'
  flags=''
  if [ $( uname ) = SunOS ]; then
    getarg='getarg.f'
    flags='-g -w4 -u -C'
    flags='-w4 -O -C'
    flags='-w1 -O2' # anything higher than -O2 breaks it
  fi
  ;;
*)
  echo "Error: no Fortran 95 compiler found"
  exit
esac

cd "$( dirname $0 )"
srcdir=$( /bin/pwd )
cd ..

mkdir -p tmp/scecvm
cd tmp/scecvm
ln -s "$srcdir/newin.h" &> /dev/null || :
sed -n 's/.*ibig *= *\([0-9]*\).*/\1/p' newin.h > ibig

makes="
  $sfc $flags xsec.f -o xsec
  $sfc $flags $getarg iobin.f scecvm4.f -o scecvm4-s
  $pfc $flags $getarg iompi.f scecvm4.f -o scecvm4-p"

IFS_save=$IFS
IFS=${IFS// /}
makes=( $makes )
IFS=$IFS_save

for make in "${makes[@]}"; do
  set $make
  echo $make > state
  obj=${!#}
  files=""
  cat newin.h >> state
  for arg in $*; do
  if [ "${arg#*.}" = f ]; then
    ln -s "$srcdir/$arg" &> /dev/null || :
    files="$files $arg"
    cat "$arg" >> state
  fi
  done
  compile=yes
  if [ -f $obj-state ]; then
    compile=$( cmp state $obj-state || : )
  fi
  if [ "$compile" ]; then
    [ -f "in.h" ] || $tar xzf "$srcdir/../data/scecvm4.tgz"
    echo $make
    $make || :
    mv state $obj-state
  fi 
  rm -f $files *.o *.mod *.ipo *.il *.stb
done
rm -f *.h

