diff -ruN Python-2.6.2/dynload_cnl.c Python-2.6.2-cnl/dynload_cnl.c
--- Python-2.6.2/Python/dynload_cnl.c	1969-12-31 19:00:00.000000000 -0500
+++ Python-2.6.2-cnl/Python/dynload_cnl.c	2009-06-02 15:15:19.000000000 -0400
@@ -0,0 +1,20 @@
+/* This module provides the simulation of dynamic loading for Cray Compute Node Linux (CNL) */
+
+#include "Python.h"
+#include "importdl.h"
+
+const struct filedescr _PyImport_DynLoadFiletab[] = {
+  {".a", "rb", C_EXTENSION},
+  {0, 0}
+};
+
+extern struct _inittab _PyImport_Inittab[];
+
+dl_funcptr _PyImport_GetDynLoadFunc(const char *fqname, const char *shortname,
+                                    const char *pathname, FILE *fp)
+{
+  struct _inittab *tab = _PyImport_Inittab;
+  while (tab->name && strcmp(shortname, tab->name)) tab++;
+
+  return tab->initfunc;
+}
diff -ruN Python-2.6.2/Lib/distutils/unixccompiler.py Python-2.6.2-cnl/Lib/distutils/unixccompiler.py
--- Python-2.6.2/Lib/distutils/unixccompiler.py	2008-07-16 09:24:06.000000000 -0400
+++ Python-2.6.2-cnl/Lib/distutils/unixccompiler.py	2009-06-02 15:17:17.000000000 -0400
@@ -317,3 +317,37 @@
 
         # Oops, didn't find it in *any* of 'dirs'
         return None
+
+    def link_shared_object (self,
+                         objects,
+                         output_filename,
+                         output_dir=None,
+                         libraries=None,
+                         library_dirs=None,
+                         runtime_library_dirs=None,
+                         export_symbols=None,
+                         debug=0,
+                         extra_preargs=None,
+                         extra_postargs=None,
+                         build_temp=None,
+                         target_lang=None):
+
+        if output_dir is None:
+            (output_dir, output_filename) = os.path.split(output_filename)
+        output_fullname = os.path.join(output_dir, output_filename)
+        linkline = "%s %s" % (output_filename[:-2], output_fullname)
+        for l in library_dirs:
+            linkline += " -L" + l
+        for l in libraries:
+            linkline += " -l" + l
+        old_fmt = self.static_lib_format
+        self.static_lib_format = "%s%.0s"
+        self.create_static_lib(objects,
+                               output_filename,
+                               output_dir,
+                               debug,
+                               target_lang)
+        
+        self.static_lib_format = old_fmt
+        print "Append to Setup: ", linkline
+
diff -ruN Python-2.6.2/Lib/locale.py Python-2.6.2-cnl/Lib/locale.py
--- Python-2.6.2/Lib/locale.py	2009-03-18 13:11:06.000000000 -0400
+++ Python-2.6.2-cnl/Lib/locale.py	2009-06-02 15:20:30.000000000 -0400
@@ -545,11 +545,11 @@
             """Return the charset that the user is likely using,
             according to the system configuration."""
             if do_setlocale:
+                return None
                 oldloc = setlocale(LC_CTYPE)
                 setlocale(LC_CTYPE, "")
                 result = nl_langinfo(CODESET)
                 setlocale(LC_CTYPE, oldloc)
-                return result
             else:
                 return nl_langinfo(CODESET)
 
diff -ruN Python-2.6.2/Modules/Setup.dist Python-2.6.2-cnl/Modules/Setup.dist
--- Python-2.6.2/Modules/Setup.dist	2008-11-27 05:15:12.000000000 -0500
+++ Python-2.6.2-cnl/Modules/Setup.dist	2009-06-02 19:01:07.000000000 -0400
@@ -167,47 +167,47 @@
 
 # Modules that should always be present (non UNIX dependent):
 
-#array arraymodule.c	# array objects
-#cmath cmathmodule.c # -lm # complex math library functions
-#math mathmodule.c # -lm # math library functions, e.g. sin()
-#_struct _struct.c	# binary structure packing/unpacking
-#time timemodule.c # -lm # time operations and variables
-#operator operator.c	# operator.add() and similar goodies
-#_weakref _weakref.c	# basic weak reference support
-#_testcapi _testcapimodule.c    # Python C API test module
-#_random _randommodule.c	# Random number generator
-#_collections _collectionsmodule.c # Container types
-#itertools itertoolsmodule.c	# Functions creating iterators for efficient looping 
-#strop stropmodule.c		# String manipulations
-#_functools _functoolsmodule.c	# Tools for working with functions and callable objects
-#_elementtree -I$(srcdir)/Modules/expat -DHAVE_EXPAT_CONFIG_H -DUSE_PYEXPAT_CAPI _elementtree.c	# elementtree accelerator
+array arraymodule.c	# array objects
+cmath cmathmodule.c # -lm # complex math library functions
+math mathmodule.c # -lm # math library functions, e.g. sin()
+_struct _struct.c	# binary structure packing/unpacking
+time timemodule.c # -lm # time operations and variables
+operator operator.c	# operator.add() and similar goodies
+_weakref _weakref.c	# basic weak reference support
+_testcapi _testcapimodule.c    # Python C API test module
+_random _randommodule.c	# Random number generator
+_collections _collectionsmodule.c # Container types
+itertools itertoolsmodule.c	# Functions creating iterators for efficient looping 
+strop stropmodule.c		# String manipulations
+_functools _functoolsmodule.c	# Tools for working with functions and callable objects
+_elementtree -I$(srcdir)/Modules/expat -DHAVE_EXPAT_CONFIG_H -DUSE_PYEXPAT_CAPI _elementtree.c	# elementtree accelerator
 #_pickle _pickle.c	# pickle accelerator
-#datetime datetimemodule.c	# date/time type
-#_bisect _bisectmodule.c	# Bisection algorithms
+datetime datetimemodule.c	# date/time type
+_bisect _bisectmodule.c	# Bisection algorithms
 
-#unicodedata unicodedata.c    # static Unicode character database
+unicodedata unicodedata.c    # static Unicode character database
 
 # access to ISO C locale support
-#_locale _localemodule.c  # -lintl
+_locale _localemodule.c  # -lintl
 
 
 # Modules with some UNIX dependencies -- on by default:
 # (If you have a really backward UNIX, select and socket may not be
 # supported...)
 
-#fcntl fcntlmodule.c	# fcntl(2) and ioctl(2)
-#spwd spwdmodule.c		# spwd(3) 
-#grp grpmodule.c		# grp(3)
-#select selectmodule.c	# select(2); not on ancient System V
+fcntl fcntlmodule.c	# fcntl(2) and ioctl(2)
+spwd spwdmodule.c		# spwd(3) 
+grp grpmodule.c		# grp(3)
+select selectmodule.c	# select(2); not on ancient System V
 
 # Memory-mapped files (also works on Win32).
-#mmap mmapmodule.c
+mmap mmapmodule.c
 
 # CSV file helper
-#_csv _csv.c
+_csv _csv.c
 
 # Socket module helper for socket(2)
-#_socket socketmodule.c
+_socket socketmodule.c
 
 # Socket module helper for SSL support; you must comment out the other
 # socket line above, and possibly edit the SSL variable:
@@ -248,14 +248,14 @@
 # Message-Digest Algorithm, described in RFC 1321.  The necessary files
 # md5.c and md5.h are included here.
 
-#_md5 md5module.c md5.c
+_md5 md5module.c md5.c
 
 
 # The _sha module implements the SHA checksum algorithms.
 # (NIST's Secure Hash Algorithms.)
-#_sha shamodule.c
-#_sha256 sha256module.c
-#_sha512 sha512module.c
+_sha shamodule.c
+_sha256 sha256module.c
+_sha512 sha512module.c
 
 
 # SGI IRIX specific modules -- off by default.
@@ -354,7 +354,7 @@
 #	-lX11
 
 # Lance Ellinghaus's syslog module
-#syslog syslogmodule.c		# syslog daemon interface
+syslog syslogmodule.c		# syslog daemon interface
 
 
 # Curses support, requring the System V version of curses, often
@@ -430,14 +430,14 @@
 
 
 # Helper module for various ascii-encoders
-#binascii binascii.c
+binascii binascii.c
 
 # Fred Drake's interface to the Python parser
-#parser parsermodule.c
+parser parsermodule.c
 
 # cStringIO and cPickle
-#cStringIO cStringIO.c
-#cPickle cPickle.c
+cStringIO cStringIO.c
+cPickle cPickle.c
 
 
 # Lee Busby's SIGFPE modules.
@@ -493,3 +493,16 @@
 
 # Another example -- the 'xxsubtype' module shows C-level subtyping in action
 xxsubtype xxsubtype.c
+
+NUMPY=/lustre/scratch/gely/local/numpy-1.3.0/
+_sort $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/core/_sort.a
+multiarray $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/core/multiarray.a -lnpymath
+umath $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/core/umath.a -lnpymath
+scalarmath $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/core/scalarmath.a
+umath_tests $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/core/umath_tests.a
+_compiled_base $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/lib/_compiled_base.a
+_capi $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/numarray/_capi.a
+fftpack_lite $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/fft/fftpack_lite.a
+lapack_lite $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/linalg/lapack_lite.a
+mtrand $(NUMPY)/build/lib.linux-x86_64-2.6/numpy/random/mtrand.a

