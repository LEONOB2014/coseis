# Options
MACHINE = {machine}
PROCESS = serial
THREAD = omp
DEBUG =    
PROFILE =
REALSIZE = 4

# Default: GNU Compiler Collection
CC = gcc
FC = gfortran 
LD = gfortran
CFLAGS = $(LDFLAGS) -pedantic
FFLAGS = $(LDFLAGS) -fimplicit-none
LDFLAGS = -g -O3 -Wall
ifeq ($(REALSIZE), 8)
    FFLAGS += -fdefault-real-8
endif
ifeq ($(THREAD), omp)
    LDFLAGS += -fopenmp
endif
ifdef PROFILE
    LDFLAGS += -pg
endif
ifdef DEBUG
    LDFLAGS += -fbounds-check -ffpe-trap=invalid,zero,overflow
endif

# MPICH
ifeq ($(MACHINE), Airy)
    PROCESS = mpi
    CC = mpicc
    FC = mpif90 
    LD = mpif90
endif

# ALCF IBM Blue Gene/P
ifeq ($(MACHINE), ALCF-BGP)
    PROCESS = mpi
    ifdef TAU
        CC = tau_cc.sh
        FC = tau_f90.sh
        LD = tau_f90.sh
        LIBS =
    else
        CC = mpixlc_r
        FC = mpixlf2003_r
        LD = mpixlf2003_r
        LIBS = /home/morozov/lib/libmpihpm.a
    endif
    CFLAGS = $(LDFLAGS) -qlist -qreport
    FFLAGS = $(LDFLAGS) -qlist -qreport
    LDFLAGS = -g -O3 -qsuppress=cmpmsg
    ifeq ($(THREAD), omp)
        LDFLAGS += -qsmp=omp
    endif
    ifeq ($(REALSIZE), 8)
        FFLAGS += -qrealsize=8
    endif
endif

# ALCF IBM Blue Gene/Q
ifeq ($(MACHINE), ALCF-BGQ)
    PROCESS = mpi
    CC = mpixlc_r
    FC = mpixlf2003_r
    LD = mpixlf2003_r
    CLFAGS = $(LDFLAGS) -qlist -qreport
    FFLAGS = $(LDFLAGS) -qlist -qreport
    LDFLAGS = -g -O3 -qsuppress=cmpmsg
    LIBS = -lSPI_upci_cnk
    ifeq ($(THREAD), omp)
        LDFLAGS += -qsmp=omp:noauto
        LIBS += /home/morozov/HPM/lib/libmpihpm_smp.a
    else
        LIBS += /home/morozov/HPM/lib/libmpihpm.a
    endif
    LIBS += /bgsys/drivers/ppcfloor/bgpm/lib/libbgpm.a
    ifeq ($(REALSIZE), 8)
        FFLAGS += -qrealsize=9
    endif
endif

# Wat2Q IBM Blue Gene/Q
ifeq ($(MACHINE), IBM-Wat2Q)
    PROCESS = mpi
    CC = /bgsys/drivers/ppcfloor/comm/xl/bin/mpixlcc_r
    FC = /bgsys/drivers/ppcfloor/comm/xl/bin/mpixlf2003_r
    LD = /bgsys/drivers/ppcfloor/comm/xl/bin/mpixlf2003_r
    CFLAGS = $(LDFLAGS) -qlist -qreport
    FFLAGS = $(LDFLAGS) -qlist -qreport
    LDFLAGS = -g -O3 -qsuppress=cmpmsg
    LIBS = -lSPI_upci_cnk /bgsys/drivers/ppcfloor/bgpm/lib/libbgpm.a
    ifeq ($(THREAD), omp)
        LDFLAGS += -qsmp=omp:noauto
    endif
    ifeq ($(REALSIZE), 8)
        FFLAGS += -qrealsize=8
    endif
endif

# KAUST Shaheen: IBM Blue Gene/P
ifeq ($(MACHINE), KAUST-Shaheen)
    PROCESS = mpi
    CC = *FIXME*
    FC = *FIXME*
    LD = *FIXME*
    CLFAGS = $(LDFLAGS)
    FFLAGS = $(LDFLAGS)
    LDFLAGS = -g -O5 -qarch=450d -qtune=450 -qsuppress=cmpmsg
    LIBS =
endif

# NICS Kraken: Cray XT5
ifeq ($(MACHINE), NICS-Kraken)
    PROCESS = mpi
    CC = cc
    FC = ftn
    LD = ftn
    CFLAGS = $(LDFLAGS)
    FFLAGS = $(LDFLAGS) -Mdclchk
    LDFLAGS = -fast
    LIBS =
    ifeq ($(THREAD), omp)
        LDFLAGS += -mp
    endif
    ifeq ($(REALSIZE), 8)
        FFLAGS += -Mr8
    endif
    ifdef DEBUG
        LDFLAGS += -g -Ktrap=fp -Mbounds -Mchkptr
    endif
    ifdef PROFILE
        LDFLAGS += -g -pg -Mprof=func
    endif
endif

# Rules
all: config.json

clean:
	rm -f config.json *.o *.mod *.x *.lst *.pyc

distclean: clean
	rm Makefile

CONFIG = {{ "process": "$(PROCESS)", "thread": "$(THREAD)", "realsize": "$(REALSIZE)" }}

config.json: sord.x
	echo '$(CONFIG)' > config.json

sord.x: {objects} \
	thread_$(THREAD).o \
	process_$(PROCESS).o
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

thread.mod: thread_$(THREAD).o
	@true   

process.mod: process_$(PROCESS).o
	@true   

{rules}

%.mod: %.o
	@true

