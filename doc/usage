USAGE

SORD is run by a shell script called 'sord':

  ./sord infile

See 'defaults.m' and other examples input files in the directory 'in/'.  The
sord script will compile the code and setup a directory for each run starting
with 'run/01'.  In the directory will be a script called 'run' to start the job
interactively and a script 'que' for batch submission.

Options:
  -s       serial mode, no MPI (default if np == 1)
  -p       parallel mode, requires MPI (default if np > 1)
  -i       run interactively
  -q       submit job to batch system, or run in the background
  -g       compile with debugging and syntax checking flags
  -G       run in debugger
  -n       check input and exit
  -v opt   generate SAF mesh and SCECVM, opt indicates version 3 or 4
  -m opt   emulate alternate machine configuration, e.g. 'datastar'
  -d       delete output from previous runs before starting
  -f       force recompile

Compiler flags are set in 'sh/config'.  When porting to a new machine, you may
want to modify the sord script at the 'Machine attributes' section.  This helps
estimate run time and setup batch submission scripts.  Machines with
specialized parallel environments, may need a custom run script added to the
section 'Run scripts'.  See 'sh/datastar' and 'sh/teragrid' for example custom
run scripts.

For the parallel version you will need MPI.

MPICH2 install
  ./configure -prefix=/usr/local --with-device=ch3:shm --enable-f90 --disable-cxx
  echo "secretword=<secretword>" > $HOME/.mpd.conf
  chmod 600 $HOME/.mpd.conf

MPICH2 SunOS install
  export CC=cc F77=f77 F90=f95 CXX=CC
  export CFLAGS=-fast FFLAGS=-fast F90FLAGS=-fast CXXFLAGS=-fast
  ./configure -prefix=/d0/gely/local --with-device=ch3:shm --enable-f90 --disable-cxx

