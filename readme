SORD - Support-Operator Rupture Dynamics
Geoffrey Ely
gely@ucsd.edu
 
COORDINATE SYSTEM
 
      v---------v                        o----x----o         w----1----w
     /         /|                       /         /|        /         /|
    /    .----. |            k         y    3----y |       2    z----2 |
   /    /|   /| |           /         /    /|   /| z      /    /    /| 3
  v----.----v | |     j----0         o----x----o | |     w----1----w | |
  |    | w--|-' |          |         |    | w--|-1 |     |    |    | x |
  |    |/   |/  v          |         |    |/   |/  o     |    |    |/  w
  |    '----'  /           l         z    2----z  /      3    y----3  / 
  |         | /                      |         | y       |         | y  
  |         |/                       |         |/        |         |/   
  v---------v                        o----x----o         w----1----w    
                                                       
  Non-staggered                      Staggered (1)       Staggered (2)
                                   
  v: v = velocity                    1 2 3: vx vy vz = velocity        
     u = displacement                x y z: wyz wzx wxy = shear stress 
     x = node locations                  w: wxx wyy wzz = normal stress
     rho = density                          rho lam miu = material props
  w: w = stress                             x = node locations (2) 
     lam miu = elastic moduli            o: x = node locations (1) 


COMPUTATIONAL CYCLE
 
S = stress tensor
A = acceleration vector
V = velocity vector
U = displacement vector
lam miu = elastic moduli
T = matrix transpose
' = d/dt
" = d^2/dt^2
 
1. Moment tensor source
 
2. Linearized conservation of momentum, Newton's 2nd law
   A    = divS/rho
   a_i  = s_ij,j/rho

3. Fault boundary condition
 
4. Velocity
   V'   = A
   v'_i = a_i

5. Displacement
   U'   = V
   u'_i = v_i

6. Modified displacements
   U~   = U + dt*beta*V
   u~_i = u_i + dt*beta*v_i
 
7. Modified strain
   E    = [gradU~ + (gradU~)^T]/2
   e_ij = [u~_i,j + u~_j,i]/2
 
8. Stress: viscoelastic solid constitutive law, Kelvin-Voight
   model, linear, isotropic, spring and dashpot in parallel
   S    = c:E
   S    = lam*trace(E)*I + 2*miu*E
   s_ij = lam*e_kk*delta_ij + 2*miu*e_ij


Combined
   rho*U" = grad_(lam*div.U~) + div.miu*[grad_U~ + (grad_U~)^T]
          = (lam+miu)*grad_(div.U~) + miu*del^2 U~
            + (grad_lam)*(div.U~) + grad_miu.[grad_U~ + (grad_U~)^T]
   rho*u"_i = (lam*u~_j,j)_,i + [miu*(u~_i,j + u~_j,i)]_,j
            = (lam+miu)*u~_j,j,i + miu*u~_i,j,j
              + lam_,i*u~_j,j + miu_,j*[u~_i,j + u~_j,i]


FAULT BOUNDARY CONDITION

n   = fault normal vector, n points toward the positive side of the fault
T   = traction exerted by the positive side
T0  = initial traction
Sn0 = initial normal component of stress
R   = restoring force on a node
m   = nodal mass
a   = element area
F   = friction, |Ts| cannot exceed friction

Acceleration and velocity of the double nodes due to restoring forces
and traction.

- side acc   a0 = [R0 + a*(T-T0)]/m0	
+ side acc   a1 = [R1 - a*(T-T0)]/m1

with no fault  a0 = a1 = (R0+R1)/(m0+m1)

- side vel   v0(t2) = v0 + dt*[R0 + a*(T-T0)]/m0
+ side vel   v1(t2) = v1 + dt*[R1 - a*(T-T0)]/m1

- side disp  u0(t2) = u0 + dt*{ v0(t0) + dt*[R0 + a*(T-T0)]/m0 }
+ side disp  u1(t2) = u1 + dt*{ v1(t0) + dt*[R1 - a*(T-T0)]/m1 }

dv = v1(t2) - v0(t2)
   = v1-v0 + dt*(R1/m1-R0/m0) - dt*a*(1/m1+1/m0)*(T-T0)

du = u1(t2) - u0(t2)
   = u1-u0 + dt*dv
   = u1-u0 + dt*(v1-v0) + dt^2*(R1/m1-R0/m0) - dt^2*a*(1/m1+1/m0)*(T-T0)

Zero relative velocity boundary condition

0  = dv
Tv = T0 + [v1-v0 + dt*(R1/m1-R0/m0)] / [dt*a*(1/m1+1/m0)]

Zero relative normal displacement boundary condition

0  = du
Tu = T0 + [u1-u0 + dt*(v1-v0) + dt^2*(R1/m1-R0/m0)] / [dt^2*a*(1/m1+1/m0)]
   = Tv + (u1-u0) / [dt^2*a*(1/m1+1/m0)]

Shear component of traction is bounded by friction

Ts  = Tv.(I-nn)
Ts' = / Ts,         |Ts| <= F
      \ F*Ts/|Ts|,  |Ts| >  F

Fault glued shut

Tn = Tv.n

Normal component of traction is bounded by cohesion (fault can open)

Tn  = Tu.n
    = (Tv + u1-u0).n / [dt^2*a*(1/m1+1/m0)]
Tn' = / Tn,     Tn <= cohes
      \ cohes,  Tn >  cohes

Total traction bounded by friction

T' = Tn'.n + Ts'

Update velocities

v0(t2) = v0(t0) + dt*(R0 + a*(T'-T0))/m0
v1(t2) = v1(t0) + dt*(R1 - a*(T'-T0))/m1

DFM fault boundary condition
T  = T0 + [R1*m0-R0*m1 + m1*m0*(v1-v0)/dt] / [a*(m1+m0)]


SLIP-WEAKENING FRICTION LAW

l    = slip length
u(l) = coefficient of friction
us   = coefficient of static friction
ud   = coefficient of dynamic friction
d0   = slip weakening distance

F = u(l) * T.n + cohesion
u(l) = / us - (us-ud)*l/d0,  l <= d0
       \ ud,                 l >  d0


       us +
          |\
 ^ T0/Sn0 + \
 |        |  \
 u     ud +   +---------
          |
          +---+---------
             d0   l->


Strength parameter
s = (Tu - T0)/(T0 - Tf)

Estimate critical radius needed for spontaneous rupture
rc =~  miu*d0*(Tu - Tf)/(T0 - Tf)^2

Estimate d0 needed to resolve breakdown zone
d0 =~ (3 or 4)*dx*(Tu - Tf)/miu



HOURGLASS CORRECTIONS

Deformation Modes for hexahedron: 8 * 3 = 24 degrees of freedom

Rigid Body: 6 = 3 translation + 3 rotation

Uniform strain: 6

   0----x      .----O      .----.      .----.
  /|          /|   /|     /|   /|     /|   /|
 y |         .----O |    O----O |    .----. |
   z         | '--|-O    | '--|-'    | O--|-O
             |/   |/     |/   |/     |/   |/ 
             '----O      O----O      O----O  
               Z1          Z2          Z3

Nonuniform strain: 12 = 24 DOF - 6 rigid body - 6 uniform strain

   .----.      .----O      .----O      O----.
  /|   /|     /|   /|     /|   /|     /|   /|
 O----O |    .----O |    O----. |    .----O |
 | O--|-O    | O--|-'    | '--|-O    | '--|-O
 |/   |/     |/   |/     |/   |/     |/   |/ 
 '----'      O----'      O----'      O----'  
  Z2 Z3       Z3 Z1       Z1 Z2      Z1 Z2 Z3

Y = miu*(lam+miu)/6/(lam+2*miu)

Q = du/dv*dx^2*dy^2*Y
a = dQ/dv/rho

Q = du/h*Y
a = dQ/h/rho


MOMENT SOURCE

Brune Source
M   = -M0 / T   * H * e^(-t/T) * (t + T) + M0
M'  =  M0 / T^2 * H * e^(-t/T) *  t
M'' = -M0 / T^3 * H * e^(-t/T) * (t - T)

Smooth Brune
M   = -M0 / 2 / T^2 * H * e^(-t/T) * (t^2 + 2*t*T + 2*T^2) + M0
M'  =  M0 / 2 / T^3 * H * e^(-t/T) *  t^2
M'' = -M0 / 2 / T^4 * H * e^(-t/T) * (t^2 - 2*t*T)


PML ABSORBING BOUNDARY

Damping operator
D     = [ d(x)  0     0
          0     d(y)  0
          0     0     d(z) ]

Partial derivative operator
[del] = [ d/dx  0     0
          0     d/dy  0
          0     0     d/dz ]

Olsen no PML
F  = divS
V' = F/rho
G  = gradV
S' = lam*trace(G)*I + miu*(G + G^T)

SORD Hourglass
F  = divS + hourglass
V' = F/rho
U' = V
G  = grad(U + gamma*V)
S  = lam*trace(G)*I + miu*(G + G^T)

SORD PML
if D == 0
  F  = divS
else
  P' + DP = [del]S
  F  = 1.P'
end
V' = F/rho
U' = V
if D == 0
  G = gradU
else
  G' + DG = gradV
end
S  = lam*trace(G)*I + miu*(G + G^T)

PML Discretization
(p2 - p1)/dt  + d*(p2 + p1)/2  = dS/dx
(p2 - p1)*2   + d*(p2 + p1)*dt = 2*dt*dS/dx
(d*dt + 2)*p2 + (d*dt - 2)*p1  = 2*dt*dS/dx
(d*dt + 2)*(p2 - p1) + 2*d*dt*p1 = 2*dt*dS/dx
p2 - p1 = - 2*d*dt/(2 + d*dt)*p1 + 2*dt/(2 + d*dt)*dS/dx
v2 = v1 + (p2 - p1) / rho
u2 = u1 + v * dt
(g2 - g1)/dt  + d*(g2 + g1)/2  = dv/dx
g2 = (2 - d*dt)/(2 + d*dt)*g1 + 2*dt/(2 + d*dt)*dv/dx
s  = c:g

nb  = PML thickness (in nodes)
i   = node index counted from the PML interface
d   = d0 * (i/nb)^2
d0  = t*vs0/h*( c1 + c2*nb + c3*nb^2 )
t   = 3.5
vs0 = 2/( 1/max(vs) + 1/min(vs) )
c1  =  8/15
c2  = -3/100
c3  =  1/1500


REYNOLDS GLYPH

r = Sij ni nj

Vector

r = v^p * |cos(f)|^p
x = r * [ sin(f) * cos(t)
          sin(f) * sin(t)
          cos(f) ]
n = [ (p+1) * sin(f)^2 * cos(t)
      (p+1) * sin(f)^2 * sin(t)
      sin(f) / |cos(f)| * ( cos(f)^2 - p*sin(f)^2 ) ]

