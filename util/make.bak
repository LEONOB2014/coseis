#!/bin/bash -e

cd "$( dirname $0 )"
srcdir=$( /bin/pwd )
cd ..

. sh/config
flags=$oflags

files="
  $getarg
  asc2flt.f90
  flt2asc.f90
  swab.f90
  stats.f90
  drape.f90
  utm.f90
  ll2utm.f90
  tscoords.f90
  tsgrid.f90
  ts2ll.f90
  ll2ts.f90
  pscoords.f90
  ps2ll.f90
  ll2ps.f90
  gearthdrape.f90"

makes="
  $sfc $flags -o asc2flt $getarg asc2flt.f90
  $sfc $flags -o flt2asc $getarg flt2asc.f90
  $sfc $flags -o swab    $getarg swab.f90
  $sfc $flags -o stats   $getarg stats.f90
  $sfc $flags -o drape   drape.f90
  $sfc $flags -o ll2utm  $getarg utm.f90 ll2utm.f90
  $sfc $flags -o tsgrid  utm.f90 tscoords.f90 tsgrid.f90
  $sfc $flags -o ts2ll   utm.f90 tscoords.f90 ts2ll.f90
  $sfc $flags -o ll2ts   utm.f90 tscoords.f90 ll2ts.f90
  $sfc $flags -o ps2ll   utm.f90 pscoords.f90 ps2ll.f90
  $sfc $flags -o ll2ps   utm.f90 pscoords.f90 ll2ps.f90
  $sfc $flags -o gearthdrape $getarg utm.f90 gearthdrape.f90"

mkdir -p tmp
cd tmp
for file in $files; do
  ln -s "$srcdir/$file" &> /dev/null || :
done
cat $files > state
echo "$sfc $flags" >> state

compile=yes
if [ -f state-util ]; then
  compile=$( cmp state state-util || : )
fi

IFS=${IFS// /}
echo "$makes"
for make in $makes; do echo X $make X; done
exit

if [ "$compile" ]; then
  echo "Compiling SORD utilities"
  rm -f state-util
  $sfc $flags -o asc2flt $getarg asc2flt.f90
  $sfc $flags -o flt2asc $getarg flt2asc.f90
  $sfc $flags -o swab    $getarg swab.f90
  $sfc $flags -o stats   $getarg stats.f90
  $sfc $flags -o drape   drape.f90
  $sfc $flags -o ll2utm  $getarg utm.f90 ll2utm.f90
  $sfc $flags -o tsgrid  utm.f90 tscoords.f90 tsgrid.f90
  $sfc $flags -o ts2ll   utm.f90 tscoords.f90 ts2ll.f90
  $sfc $flags -o ll2ts   utm.f90 tscoords.f90 ll2ts.f90
  $sfc $flags -o ps2ll   utm.f90 pscoords.f90 ps2ll.f90
  $sfc $flags -o ll2ps   utm.f90 pscoords.f90 ll2ps.f90
  $sfc $flags -o gearthdrape $getarg utm.f90 gearthdrape.f90
  mv state state-util
  rm -f *.o *.mod *.ipo *.il *.stb
fi
rm -f $files

